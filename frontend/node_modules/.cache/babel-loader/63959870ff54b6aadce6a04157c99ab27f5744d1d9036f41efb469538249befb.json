{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport ProfileSetup from './components/ProfileSetup';\nimport BotSelection from './components/BotSelection';\nimport ChatInterface from './components/ChatInterface';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [currentSession, setCurrentSession] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Check for existing user session\n  useEffect(() => {\n    const savedUser = localStorage.getItem('chatapp_user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('chatapp_user');\n      }\n    }\n  }, []);\n  const handleUserCreated = userData => {\n    setUser(userData);\n    localStorage.setItem('chatapp_user', JSON.stringify(userData));\n  };\n  const handleSessionStarted = sessionData => {\n    setCurrentSession(sessionData);\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setCurrentSession(null);\n    localStorage.removeItem('chatapp_user');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobile-container\",\n    children: [/*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: !user ? /*#__PURE__*/_jsxDEV(WelcomeScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/select-bot\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/setup\",\n          element: !user ? /*#__PURE__*/_jsxDEV(ProfileSetup, {\n            onUserCreated: handleUserCreated,\n            isLoading: isLoading,\n            setIsLoading: setIsLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/select-bot\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/select-bot\",\n          element: user ? /*#__PURE__*/_jsxDEV(BotSelection, {\n            user: user,\n            onSessionStarted: handleSessionStarted,\n            onLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/chat/:sessionId\",\n          element: user && currentSession ? /*#__PURE__*/_jsxDEV(ChatInterface, {\n            user: user,\n            session: currentSession,\n            onBackToSelection: () => setCurrentSession(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/select-bot\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      toastOptions: {\n        duration: 3000,\n        style: {\n          background: '#1f2937',\n          color: '#f9fafb',\n          borderRadius: '12px',\n          padding: '12px 16px'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+oVkD7X0v5aocXGOVTMtsv3DH1g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Toaster","WelcomeScreen","ProfileSetup","BotSelection","ChatInterface","jsxDEV","_jsxDEV","App","_s","user","setUser","currentSession","setCurrentSession","isLoading","setIsLoading","savedUser","localStorage","getItem","JSON","parse","error","console","removeItem","handleUserCreated","userData","setItem","stringify","handleSessionStarted","sessionData","handleLogout","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","onUserCreated","onSessionStarted","onLogout","session","onBackToSelection","position","toastOptions","duration","style","background","color","borderRadius","padding","_c","$RefreshReg$"],"sources":["/app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport ProfileSetup from './components/ProfileSetup';\nimport BotSelection from './components/BotSelection';\nimport ChatInterface from './components/ChatInterface';\nimport './App.css';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [currentSession, setCurrentSession] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Check for existing user session\n  useEffect(() => {\n    const savedUser = localStorage.getItem('chatapp_user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('chatapp_user');\n      }\n    }\n  }, []);\n\n  const handleUserCreated = (userData) => {\n    setUser(userData);\n    localStorage.setItem('chatapp_user', JSON.stringify(userData));\n  };\n\n  const handleSessionStarted = (sessionData) => {\n    setCurrentSession(sessionData);\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    setCurrentSession(null);\n    localStorage.removeItem('chatapp_user');\n  };\n\n  return (\n    <div className=\"mobile-container\">\n      <Router>\n        <Routes>\n          {/* Welcome Screen */}\n          <Route \n            path=\"/\" \n            element={\n              !user ? (\n                <WelcomeScreen />\n              ) : (\n                <Navigate to=\"/select-bot\" replace />\n              )\n            } \n          />\n          \n          {/* Profile Setup */}\n          <Route \n            path=\"/setup\" \n            element={\n              !user ? (\n                <ProfileSetup \n                  onUserCreated={handleUserCreated}\n                  isLoading={isLoading}\n                  setIsLoading={setIsLoading}\n                />\n              ) : (\n                <Navigate to=\"/select-bot\" replace />\n              )\n            } \n          />\n          \n          {/* Bot Selection */}\n          <Route \n            path=\"/select-bot\" \n            element={\n              user ? (\n                <BotSelection \n                  user={user}\n                  onSessionStarted={handleSessionStarted}\n                  onLogout={handleLogout}\n                />\n              ) : (\n                <Navigate to=\"/\" replace />\n              )\n            } \n          />\n          \n          {/* Chat Interface */}\n          <Route \n            path=\"/chat/:sessionId\" \n            element={\n              user && currentSession ? (\n                <ChatInterface \n                  user={user}\n                  session={currentSession}\n                  onBackToSelection={() => setCurrentSession(null)}\n                />\n              ) : (\n                <Navigate to=\"/select-bot\" replace />\n              )\n            } \n          />\n          \n          {/* Fallback */}\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </Router>\n      \n      <Toaster \n        position=\"top-center\"\n        toastOptions={{\n          duration: 3000,\n          style: {\n            background: '#1f2937',\n            color: '#f9fafb',\n            borderRadius: '12px',\n            padding: '12px 16px',\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}